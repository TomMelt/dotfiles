snippet pvar "print var"
print *, '${1:var} = '
print *,  ${1///}
endsnippet
snippet if "if block"
if ($1) then
$2
end if
endsnippet
snippet ass "associate block"
associate( $1 => $2 )
$3
end associate
endsnippet
snippet inter "interface block"
interface $1
module procedure $2
end interface $1
endsnippet
snippet use "use statement"
use :: $1, only : $2
endsnippet
snippet prec "common precision block"
use, intrinsic :: iso_fortran_env, only : sp => real32, dp => real64
endsnippet

# Variables definitions
# Boolean
snippet bool
logical :: ${0}
endsnippet
# Integer
snippet int
integer :: ${0}
endsnippet
# real
snippet real
real${1:(kind=wp)} :: ${0}
endsnippet
# Double Precision
snippet double
double precision :: ${0}
endsnippet
# Char
snippet str
character(len=${1:*}) :: ${0:}
endsnippet
snippet impl
implicit none
${0}
endsnippet
